# Configuration for the Azure AD application used to authenticate (see setup instructions in README)
azureClientId: ""
azureTenantId: ""

# Format for the webhook request
# Supported values: "plain" (default), "slack", "discord"
webhookFormat: "plain"

# URL of the webhook to send notifications to
# Will send the notification in the POST body as text/plain
# (Required)
webhookUrl: ""

# Optional key to authenticate with the webhook URL
# If present, will be passed as value for the "Authorization" header in requests to the webhook
webhookKey: ""

# Configuration for TLS certificates and keys. It can be one of two options:
# 1. Use "tlsPath" to set a path to a folder on disk where the TLS certificate ("tls-cert.pem") and key ("tls-key.pem") exist.
# 2. Alternatively, use both "tlsCertPEM" and "tlsKeyPEM", which are the PEM-encoded certificate and key respectively.
# If neither "tlsPath" and the "tlsCertPEM"/"tlsKeyPEM" pair are provided, Unlocker uses the folder where this config file is located to look for the certificate and key in files named "tls-cert.pem" and "tls-key.pem" respectively.
tlsPath: ""
tlsCertPEM: ""
tlsKeyPEM: ""

# Port to listen on
# Default: 8080
port: 8080

# Address to listen on
# Default: "0.0.0.0" to listen on every interface
bind: "0.0.0.0"

# Comma-separated list of IPs (and IP ranges in CIDR notation) that are allowed to invoke the /wrap, /unwrap and /result methods
# If empty, all requests are allowed
# This doesn't apply to the endpoints used by admins to confirm requests
allowedIps: ""

# Comma-separated lists of origins for CORS
# Example: "https://url1,https://url2"
# If empty or unset, will the same as baseUrl
# To allow any origin, set value to "*"
origins: ""

# Base URL where the application is deployed, used for authentication callbacks and in notifications
# This URL must be routable by clients (administrators), but doesn't need to be public
# Default: "https://localhost:8080"
baseUrl: "https://localhost:8080"

# Timeout for sessions before having to authenticate again, in seconds. This cannot be more than 3600 (1 hour).
# Default 300 (5 minutes)
sessionTimeout: 300

# Default timeout for wrap and unwrap requests, in seconds
# Default 300 (5 minutes)
# Can be overridden in each request
requestTimeout: 300

# Enable the metrics server which exposes a Prometheus-compatible endpoint `/metrics`
# Default: false
enableMetrics: false

# Port for the metrics server to listen on
# Default: 2112
metricsPort: 2112

# Address for the metrics server to listen on
# Default: "0.0.0.0" to listen on every interface
metricsBind: "0.0.0.0"

# String used as key to sign state tokens
# If left empty, it will be randomly generated every time the app starts (recommended, unless you need user sessions to persist after the application is restarted).
tokenSigningKey: ""

# String used as key to encrypt cookies
# If left empty, it will be randomly generated every time the app starts (recommended, unless you need user sessions to persist after the application is restarted).
cookieEncryptionKey: ""

# String with the name of a header to trust as ID of each request. The ID is included in logs and in responses as "X-Request-ID" header.
# Common values can include:
# - "X-Request-ID": a de-facto standard that's vendor agnostic: https://http.dev/x-request-id 
# - "CF-Ray": when the application is served by a Cloudflare CDN: https://developers.cloudflare.com/fundamentals/get-started/reference/cloudflare-ray-id/
# If this option is empty, or if it contains the name of a header that is not found in an incoming request, a random UUID is generated as request ID.
trustedRequestIdHeader: ""

# Log level.
# Supported values: "debug", "info" (default), "warn", "error"
logLevel: "info"
